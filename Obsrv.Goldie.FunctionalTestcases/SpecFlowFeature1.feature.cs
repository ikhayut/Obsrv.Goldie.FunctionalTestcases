// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Obsrv.Goldie.FunctionalTestcases
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("File upload and data processing")]
    public partial class FileUploadAndDataProcessingFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecFlowFeature1.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "File upload and data processing", "\tIn order to process Goldie sales data correctly\r\n\tAs an AR Specialist\r\n\tI want t" +
                    "o be able to transfer Goldie data into IDT database", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("File upload")]
        [NUnit.Framework.CategoryAttribute("FileUpload")]
        [NUnit.Framework.TestCaseAttribute("2585990", null)]
        [NUnit.Framework.TestCaseAttribute("2585998", null)]
        [NUnit.Framework.TestCaseAttribute("2598702", null)]
        public virtual void FileUpload(string cust_Po_No, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "FileUpload"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("File upload", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("Test data deleted from DB tables prior to file upload", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("File import was run", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.And("Status in the log table = S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.Then(string.Format("Records with matching {0} inserted into Header", cust_Po_No), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Header record check")]
        [NUnit.Framework.CategoryAttribute("SalesOrder")]
        public virtual void HeaderRecordCheck()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Header record check", new string[] {
                        "SalesOrder"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.When("SalesOrder 2585998 is imported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "org_id",
                        "tnum",
                        "cust_id",
                        "cust_billto_id",
                        "cust_shipto_id",
                        "freight",
                        "tax",
                        "total",
                        "cust_name",
                        "status",
                        "so_date",
                        "inv_date",
                        "due_date",
                        "terms",
                        "sp_id",
                        "cashsale",
                        "sp_name",
                        "term_id",
                        "shipping_method",
                        "ship_date",
                        "cust_po_no",
                        "flex_value",
                        "hold_at_station",
                        "card_type",
                        "shipment_source",
                        "bill_method"});
            table1.AddRow(new string[] {
                        "1407",
                        "PENDING",
                        "101648",
                        "539012",
                        "539012",
                        "14.00",
                        "9.38",
                        "323.38",
                        "LA ESTRELLITA LLC",
                        "3",
                        "8/7/2017",
                        "8/7/2017",
                        "8/7/2017",
                        "CONSIGNMENT",
                        "100004901",
                        "Y",
                        "CLAUDIA SALAMANCA",
                        "2410",
                        "GG",
                        "8/7/2017",
                        "2585998",
                        "GG",
                        "N",
                        "CARD",
                        "INHOUSE",
                        "ACT"});
#line 21
testRunner.Then("Heder record values should be as expected", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SalesOrder number of items check")]
        [NUnit.Framework.CategoryAttribute("SalesOrder")]
        [NUnit.Framework.TestCaseAttribute("2585990", "3", null)]
        [NUnit.Framework.TestCaseAttribute("2585998", "2", null)]
        public virtual void SalesOrderNumberOfItemsCheck(string cust_Po_No, string lines, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SalesOrder"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SalesOrder number of items check", @__tags);
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.When("File import was run", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then(string.Format("Correct number of {0} generated for each \"{1}\"", lines, cust_Po_No), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Freight value check")]
        [NUnit.Framework.CategoryAttribute("SalesOrder")]
        [NUnit.Framework.TestCaseAttribute("7.00", "7.00", "2585989", null)]
        [NUnit.Framework.TestCaseAttribute("5.00", "0.00", "2585990", null)]
        public virtual void FreightValueCheck(string line1, string line2, string cust_Po_No, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SalesOrder"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Freight value check", @__tags);
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
 testRunner.When("File import was run", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.Then(string.Format("Freight calculated correctly based on item {0}, {1} for \"{2}\"", line1, line2, cust_Po_No), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Tax rate calculation check")]
        [NUnit.Framework.CategoryAttribute("SalesOrder")]
        [NUnit.Framework.TestCaseAttribute("4.60", "145.00", "7", "abde342", null)]
        [NUnit.Framework.TestCaseAttribute("2.30", "12.09", "1", "rterter", null)]
        public virtual void TaxRateCalculationCheck(string taxamount, string price, string qty, string cust_Po_No, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SalesOrder"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Tax rate calculation check", @__tags);
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
 testRunner.When("File import was run", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.Then(string.Format("tax rate equals {0}/({1} * {2}) for \"{3}\"", taxamount, price, qty, cust_Po_No), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
